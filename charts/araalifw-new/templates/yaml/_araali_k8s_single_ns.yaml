{{- define "araali_k8s_single_ns" -}}
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    is_araali: "true"
  name: araali
---
apiVersion: v1
kind: Secret
metadata:
  name: araali-secrets
  namespace: araali
  labels:
    is_araali: "true"
data:
  workloadId: {{ .Values.araali.workload_id }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: araali-config
  namespace: araali
  labels:
    is_araali: "true"
data:
  gtorcfg.tap_mode: "true"
  gtorcfg.gtor_shim_enable: "false"
  gtorcfg.ebpf: "true"
  gtorcfg.ebpf_cookie: "{{ .Values.araali.enforce }}"
  gtorcfg.gtor_upgrade: "{{ .Values.araali.upgrade }}"
  gtorcfg.enable_per_process_vulnerabilities: "{{ .Values.araali.enable_per_process_vulnerabilities }}"
  gtorcfg.enable_container_vulnerabilities: "{{ .Values.araali.enable_container_vulnerabilities }}"
  gtorcfg.ebpf_dedup_flows: "{{ .Values.araali.ebpf_dedup_flows }}"
  gtorcfg.ebpf_rate_limit_flows: "{{ .Values.araali.ebpf_rate_limit_flows }}"
  gtorcfg.cpu_limit_enabled: "{{ .Values.araali.cpu_limit_enabled }}"
  gtorcfg.agent_cpu_limit: "{{ .Values.araali.agent_cpu_limit }}"
  gtorcfg.sys_cpu_threshold: "{{ .Values.araali.sys_cpu_threshold }}"
  gtorcfg.vuln_idle_duty_cycles: "{{ .Values.araali.vuln_idle_duty_cycles }}"
  gtorcfg.agent_limited_resources: "{{ .Values.araali.agent_limited_resources }}"
  gtorcfg.vuln_min_cores: "{{ .Values.araali.vuln_min_cores }}"
  gtorcfg.vuln_image_size: "{{ .Values.araali.vuln_image_size }}"
  gtorcfg.agent_nice_enabled: "{{ .Values.araali.agent_nice_enabled }}"
  gtorcfg.agent_nice_value: "{{ .Values.araali.agent_nice_value }}"
  gtorcfg.enter_mini_shell: "{{ .Values.araali.enter_mini_shell }}"
  gtorcfg.fog_fqdn: "{{ .Values.araali.fog }}"
  araali.controller: "{{ .Values.araali.controller }}"
  gtorenv.k8s_yaml_version: "1.1"
  gtorenv.araali_enable: "1"
  gtorenv.path: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/hroot/usr/sbin:/hroot/usr/bin:/hroot/sbin:/hroot/bin:/hroot/usr/local/sbin:/hroot/usr/local/bin"
  araalitags.zone: "{{ .Values.araali.zone }}"
  araalitags.clusterName: "{{ .Values.araali.cluster_name }}"
  araalitags.app: "{{ .Values.araali.app }}"
  araalitags.origImageName: "{{ .Values.araali.fw_image }}"
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: araali-fw
  namespace: araali
  labels:
    is_araali: "true"
spec:
  selector:
    matchLabels:
      araali: araali-fw
  template:
    metadata:
      labels:
        araali: araali-fw
        is_araali: "true"
    spec:
      initContainers:
      - image: "{{ .Values.araali.fw_init_image }}"
        imagePullPolicy: Always
        name: araali-fw-init
        env:
          - name: "PATH"
            value: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/hroot/usr/sbin:/hroot/usr/bin:/hroot/sbin:/hroot/bin:/hroot/usr/local/sbin:/hroot/usr/local/bin"
        volumeMounts:
          - name: host-root
            mountPath: /hroot
          - name: sys-bpf
            mountPath: /sys/fs/bpf
            mountPropagation: Bidirectional
          - name: docker-sock
            mountPath: /var/run/docker.sock
            readOnly: true
        securityContext:
          privileged: true
      containers:
      - image: "{{ .Values.araali.fw_image }}"
        imagePullPolicy: Always
        name: araali-fw
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh","-c", "echo \"Clear TC at \"$(date) >> /hroot/tmp/dset_tc_cleanup.log && /opt/araali/bin/araalictl guarantor -stop >> /hroot/tmp/dset_tc_cleanup.log"]
        env:
          - name: "GODEBUG"
            value: "madvdontneed=1"
        volumeMounts:
          - name: araali-secrets
            mountPath: /araali-secrets
          - name: araali-config
            mountPath: /araali-config
          - name: host-root
            mountPath: /hroot
          - name: etc-hosts
            mountPath: /etc/hosts
          - name: sys-debug
            mountPath: /sys/kernel/debug
          - name: fs-cgroup
            mountPath: /sys/fs/cgroup
          - name: sys-bpf
            mountPath: /sys/fs/bpf
            mountPropagation: Bidirectional
          - name: boot
            mountPath: /boot
          - name: docker-sock
            mountPath: /var/run/docker.sock
            readOnly: true
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "{{ .Values.araali.k8s_req_mem }}"
            cpu: "{{ .Values.araali.k8s_req_cpu }}"
          limits:
            memory: "{{ .Values.araali.k8s_limits_mem }}"
            cpu: "{{ .Values.araali.k8s_limits_cpu }}"
      hostNetwork: true
      hostPID: true
      hostIPC: true
      volumes:
        - name: araali-secrets
          secret:
            secretName: araali-secrets
        - name: araali-config
          configMap:
            name: araali-config
        - name: host-root
          hostPath:
            path: /
        - name: etc-hosts
          hostPath:
            path: /etc/hosts
        - name: sys-debug
          hostPath:
            path: /sys/kernel/debug
        - name: fs-cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: sys-bpf
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        - name: boot
          hostPath:
            path: /boot
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
      restartPolicy: Always
      priorityClassName: system-node-critical
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
      - operator: "Exists"
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: araalipolicies.araalinetworks.com
  labels:
    is_araali: "true"
spec:
  group: araalinetworks.com
  names:
    plural: araalipolicies
    singular: araalipolicy
    kind: AraaliPolicy
    listKind: AraaliPolicyList
    shortNames:
    - ap
  scope: Namespaced
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Schema for the AraaliPolicy rules
          type: object
          properties:
            enforce:
              description: Entities to be enforace
              type: object
              properties:
                containers:
                  description: Araali policies per container
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        description: Name of the container
                        type: string
                      pod:
                        description: Pod of the container
                        type: string
                      app:
                        description: Name of the app
                        type: string
                      zone:
                        description: Pod of the zone
                        type: string
                apps:
                  description: Araali policies per zone/app
                  type: array
                  items:
                    type: object
                    description: Enforce config per app.
                    properties:
                      name:
                        description: Name of the app
                        type: string
                      zone:
                        description: Pod of the zone
                        type: string
                zones:
                  description: Araali policies per zone
                  type: array
                  items:
                    type: object
                    description: Enforce config per zone.
                    properties:
                      name:
                        description: Name of the zone
                        type: string
            containers:
              description: Araali policies per container
              type: array
              items:
                type: object
                description: Each container object specifies it's name and processes within it.
                properties:
                  name:
                    description: Name of the container
                    type: string
                  pod:
                    description: Pod of the container
                    type: string
                  processes:
                    type: array
                    items:
                      type: object
                      description: Each process object specifies it's privileges
                      properties:
                        name:
                          description: Process name
                          type: string
                        parentProcess:
                          description: Parent process name
                          type: string
                        binaryName:
                          description: Process binary name
                          type: string
                        cmdLine:
                          description: Process command line
                          type: string
                        originalApp:
                          description: Original App Name
                          type: string
                        toAraali:
                          type: array
                          description: Privileges to Araali endpoints
                          items:
                            type: object
                            properties:
                              zone:
                                type: string
                              app:
                                type: string
                              originalApp:
                                type: string
                              pod:
                                type: string
                              containerName:
                                type: string
                              process:
                                type: string
                              parentProcess:
                                type: string
                              binaryName:
                                type: string
                              action:
                                  enum:
                                  - ALLOW
                                  - IGNORE
                                  default: ALLOW
                                  type: string
                        toNonAraali:
                          type: array
                          description: Specify white listed Non-Araali endpoints
                          items:
                            type: object
                            properties:
                              fqdn:
                                type: string
                              ip:
                                type: string
                              port:
                                type: integer
                              action:
                                enum:
                                - ALLOW
                                - IGNORE
                                default: ALLOW  
                                type: string
                        exposedTo:
                          type: array
                          description: Specify white listed endpoints allowed to access services
                          items:
                            type: object
                            properties:
                              zone:
                                type: string
                              app:
                                type: string
                              originalApp:
                                type: string
                              pod:
                                type: string
                              containerName:
                                type: string
                              process:
                                type: string
                              parentProcess:
                                type: string
                              binaryName:
                                type: string
                              port:
                                type: string
                              scope:
                                enum:
                                - WORLD
                                - HOME
                                type: string
                              action:
                                enum:
                                - ALLOW
                                - IGNORE
                                default: ALLOW
                                type: string
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: araali-operator-config
  namespace: araali
  labels:
    is_araali: "true"
data:
  araalitags.operator.fog_fqdn: "{{ .Values.araali.fog }}"
  araalitags.operator.upgrade_disable: "0"
  araalitags.operator.araali_k8s_policy_enable: "1"
  araalitags.zone: "{{ .Values.araali.zone }}"
  araalitags.clusterName: "{{ .Values.araali.cluster_name }}"
  araalitags.app: "{{ .Values.araali.app }}"
  araalitags.origImageName: "{{ .Values.araali.fw_image }}"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: araali-operator
  namespace: araali
  labels:
    is_araali: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: araali-operator
  labels:
    is_araali: "true"
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: araali-operator
  labels:
    is_araali: "true"
subjects:
- kind: ServiceAccount
  name: araali-operator
  namespace: araali
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: araali-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: servicediscovery
    namespace: araali
    labels:
        name: servicediscovery
        is_araali: "true"
spec:
    replicas: 1
    selector:
        matchLabels:
            name: servicediscovery
    template:
        metadata:
            labels:
                is_araali: "true"
                name: servicediscovery
        spec:
            serviceAccountName: araali-operator
            containers:
            - name: servicediscovery
              image: "{{ .Values.araali.autok8s_image }}"
              imagePullPolicy: Always
              volumeMounts:
                - name: araali-secrets
                  mountPath: /araali-secrets
                - name: araali-operator-config
                  mountPath: /araali-operator-config
              env:
              - name: GODEBUG
                value: "madvdontneed=1"
            volumes:
              - name: araali-secrets
                secret:
                  secretName: araali-secrets
              - name: araali-operator-config
                configMap:
                  name: araali-operator-config
            nodeSelector:
              beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: servicediscovery
  namespace: araali
  labels:
    name: servicediscovery
    is_araali: "true"
spec:
  ports:
  - port: 50054
    targetPort: 50054
  selector:
    name: servicediscovery
{{- end -}}
